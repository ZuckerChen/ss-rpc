<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ssrpc</groupId>
    <artifactId>ss-rpc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>SS-RPC</name>
    <description>Simple &amp; Smart RPC Framework for Java</description>
    <url>https://github.com/your-username/ss-rpc</url>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- 版本管理 -->
        <netty.version>4.1.104.Final</netty.version>
        <jackson.version>2.15.2</jackson.version>
        <protobuf.version>3.24.4</protobuf.version>
        <kryo.version>5.5.0</kryo.version>
        <zookeeper.version>3.9.1</zookeeper.version>
        <nacos.version>2.3.0</nacos.version>
        <spring.version>5.3.30</spring.version>
        <spring.boot.version>2.7.17</spring.boot.version>
        <slf4j.version>1.7.36</slf4j.version>
        <logback.version>1.2.12</logback.version>
        <junit.version>5.10.1</junit.version>
        <mockito.version>5.7.0</mockito.version>
        <lombok.version>1.18.30</lombok.version>
        <micrometer.version>1.12.0</micrometer.version>
        <guava.version>32.1.3-jre</guava.version>
    </properties>

    <modules>
        <!-- 基础层 - 核心接口和基础功能 -->
        <module>ss-rpc-core</module>
        <module>ss-rpc-protocol</module>
        <module>ss-rpc-config</module>
        
        <!-- 功能层 - 具体功能实现 -->
        <module>ss-rpc-serialization</module>
        <module>ss-rpc-registry</module>
        <module>ss-rpc-loadbalance</module>
        <module>ss-rpc-transport</module>
        <module>ss-rpc-filter</module>
        <module>ss-rpc-fault-tolerance</module>
        <module>ss-rpc-metrics</module>
        
        <!-- 组装层 - 功能整合 -->
        <module>ss-rpc-bootstrap</module>
        <module>ss-rpc-invoke</module>
        
        <!-- 集成层 - 外部框架集成 -->
        <module>ss-rpc-spring-boot-starter</module>
        
        <!-- 应用层 - 示例和测试 -->
        <module>ss-rpc-examples</module>
        <module>ss-rpc-test</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- SS-RPC 内部模块 -->
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-protocol</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-registry</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-serialization</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-loadbalance</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-transport</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-bootstrap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-invoke</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-filter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-fault-tolerance</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ssrpc</groupId>
                <artifactId>ss-rpc-metrics</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Netty网络通信 -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- 序列化相关 -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>

            <!-- 注册中心相关 -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos.version}</version>
            </dependency>

            <!-- Spring相关 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.boot.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- 监控相关 -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>

            <!-- 日志相关 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- 工具类 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- 测试相关 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.10</version>
                </plugin>
                
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            
            <!-- 代码覆盖率插件 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>your-username</id>
            <name>Your Name</name>
            <email>your.email@example.com</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/your-username/ss-rpc.git</connection>
        <developerConnection>scm:git:ssh://github.com:your-username/ss-rpc.git</developerConnection>
        <url>https://github.com/your-username/ss-rpc/tree/main</url>
    </scm>
</project> 